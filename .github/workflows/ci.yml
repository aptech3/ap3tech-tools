name: CI

on:
  push:
    branches: [ pre-prod ]
  pull_request:
    branches: [ pre-prod ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Tesseract
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y tesseract-ocr tesseract-ocr-eng
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            brew install tesseract
          else
            choco install tesseract -y
          fi

      - name: Install runtime deps
        if: hashFiles('requirements.txt') != ''
        run: pip install -r requirements.txt

      - name: Install dev deps
        run: pip install -r requirements-dev.txt

      - name: Ruff (lint)
        run: ruff check .

      - name: Mypy (type check)
        run: mypy .

      - name: Pre-commit (lint/type on staged set)
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: PyTest
        env:
          PYTHONPATH: .
        run: pytest --cov --cov-report=xml


      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: false

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore

  # Optional: quick CLI smoke, explicitly exercising the PDF compressor as a tool
  pdf-cli-smoke:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          pip install -r requirements.txt || true
          pip install -r requirements-dev.txt
      - name: Create tiny sample PDF to exercise CLI
        run: |
          python - <<'PY'
          import fitz
          doc = fitz.open()
          page = doc.new_page()
          page.insert_text((72, 72), "Sample Lien Notice - Test PDF", fontsize=18)
          doc.save("sample.pdf")
          doc.close()
          PY
      - name: Run CLI help
        run: python -m utils.pdf_utils --help
      - name: Run compressor on sample
        run: python -m utils.pdf_utils sample.pdf --dpi 144 --quality 75 --target-mb 9.5
